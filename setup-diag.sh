#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
echo "================================================================="
echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´"
echo "================================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω –ª–∏ Docker
if ! sudo docker info &>/dev/null; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º Docker..."
    sudo systemctl start docker
    sleep 3
    if ! sudo docker info &>/dev/null; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker. –í—ã—Ö–æ–¥."
        exit 1
    fi
    echo "‚úÖ Docker —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ Docker
if ! sudo docker network inspect app-network &>/dev/null; then
    echo "üîÑ –°–æ–∑–¥–∞–µ–º —Å–µ—Ç—å app-network..."
    sudo docker network create app-network
    echo "‚úÖ –°–µ—Ç—å app-network —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "‚úÖ –°–µ—Ç—å app-network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —Ç–æ–º–æ–≤ Docker
VOLUMES=("n8n_data" "n8n_postgres_data" "n8n_redis_data" "flowise_data" "qdrant_storage" "caddy_data" "caddy_config")
for volume in "${VOLUMES[@]}"; do
    if ! sudo docker volume inspect "$volume" &>/dev/null; then
        echo "üîÑ –°–æ–∑–¥–∞–µ–º —Ç–æ–º $volume..."
        sudo docker volume create "$volume"
        echo "‚úÖ –¢–æ–º $volume —Å–æ–∑–¥–∞–Ω"
    else
        echo "‚úÖ –¢–æ–º $volume —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞ –≤ /opt/
if [ ! -f "/opt/.env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ /opt/. –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
    if [ -f ".env" ]; then
        sudo cp ".env" "/opt/.env"
        sudo chmod 600 "/opt/.env"
        echo "‚úÖ –§–∞–π–ª .env —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ /opt/"
    else
        echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –Ω–∏ –≤ /opt/. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env..."
        sudo bash -c 'cat > /opt/.env << EOF
# Settings for n8n
N8N_ENCRYPTION_KEY=$(openssl rand -hex 20)
N8N_USER_MANAGEMENT_JWT_SECRET=$(openssl rand -hex 20)
N8N_DEFAULT_USER_EMAIL=nedox32@gmail.com
N8N_DEFAULT_USER_PASSWORD=admin123
SUBDOMAIN=n8n
GENERIC_TIMEZONE=UTC
FLOWISE_USERNAME=admin
FLOWISE_PASSWORD=admin123
POSTGRES_DB=n8n
POSTGRES_USER=n8n
POSTGRES_PASSWORD=postgres123
DOMAIN_NAME=flowdarth.ru
QDRANT_API_KEY=$(openssl rand -hex 16)
CRAWL4AI_JWT_SECRET=$(openssl rand -hex 16)
EOF'
        echo "‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª –≤ /opt/"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è docker-compose —Ñ–∞–π–ª–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤
echo -e "\nüîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º docker-compose —Ñ–∞–π–ª—ã –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤..."
for tmpl in *.template; do
    if [[ "$tmpl" == "Caddyfile.template" ]]; then
        continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º Caddyfile
    fi
    
    yaml="${tmpl%.template}.yaml"
    echo "‚Üí –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º $yaml –∏–∑ $tmpl..."
    envsubst < "$tmpl" > "$yaml"
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ $yaml –∏–∑ $tmpl"
        exit 1
    fi
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ /opt/
    sudo cp "$yaml" "/opt/$yaml"
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ $yaml –≤ /opt/"
        exit 1
    fi
    echo "‚úÖ $yaml —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ /opt/"
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ /opt/
echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö docker-compose —Ñ–∞–π–ª–æ–≤ –≤ /opt/..."
FILES=(
    "n8n-docker-compose.yaml"
    "flowise-docker-compose.yaml"
    "qdrant-docker-compose.yaml"
    "crawl4ai-docker-compose.yaml"
    "watchtower-docker-compose.yaml"
    "netdata-docker-compose.yaml"
)

for file in "${FILES[@]}"; do
    if [ ! -f "/opt/$file" ]; then
        echo "‚ùå –§–∞–π–ª /opt/$file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    else
        echo "‚úÖ –§–∞–π–ª /opt/$file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
done

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."

# –ó–∞–ø—É—Å–∫ n8n (—Å Postgres, Redis, Caddy)
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º n8n, Postgres, Redis, Caddy..."
sudo docker compose -f /opt/n8n-docker-compose.yaml --env-file /opt/.env up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ n8n"
else
    echo "‚úÖ n8n —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏
sleep 5
if ! sudo docker network inspect app-network &>/dev/null; then
    echo "‚ùå –°–µ—Ç—å app-network –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –°–æ–∑–¥–∞–µ–º..."
    sudo docker network create app-network
    echo "‚úÖ –°–µ—Ç—å app-network —Å–æ–∑–¥–∞–Ω–∞"
fi

# –ó–∞–ø—É—Å–∫ Flowise
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Flowise..."
sudo docker compose -f /opt/flowise-docker-compose.yaml --env-file /opt/.env up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Flowise"
else
    echo "‚úÖ Flowise —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ Qdrant
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Qdrant..."
sudo docker compose -f /opt/qdrant-docker-compose.yaml --env-file /opt/.env up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Qdrant"
else
    echo "‚úÖ Qdrant —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ Crawl4AI
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Crawl4AI..."
sudo docker compose -f /opt/crawl4ai-docker-compose.yaml --env-file /opt/.env up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Crawl4AI"
else
    echo "‚úÖ Crawl4AI —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ Watchtower
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Watchtower..."
sudo docker compose -f /opt/watchtower-docker-compose.yaml up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Watchtower"
else
    echo "‚úÖ Watchtower —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ Netdata
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º Netdata..."
sudo docker compose -f /opt/netdata-docker-compose.yaml --env-file /opt/.env up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Netdata"
else
    echo "‚úÖ Netdata —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Adminer –∑–∞–ø—É—â–µ–Ω (–æ–±—ã—á–Ω–æ –∏–¥–µ—Ç –≤ —Å–æ—Å—Ç–∞–≤–µ n8n)
if ! sudo docker ps | grep -q "adminer"; then
    echo "üîÑ Adminer –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑ n8n-docker-compose.yaml..."
    sudo docker compose -f /opt/n8n-docker-compose.yaml --env-file /opt/.env up -d adminer
    if [ $? -ne 0 ]; then
        echo "‚ö†Ô∏è Adminer –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ"
    else
        echo "‚úÖ Adminer —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
    fi
else
    echo "‚úÖ Adminer —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sudo docker ps

echo -e "\n================================================================="
echo "‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–´"
echo "================================================================="
echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –Ω—É–∂–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã."
echo "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–æ–π:"
echo "sudo docker logs <–∏–º—è_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞>"
echo -e "\n"
